# -*- coding: utf-8 -*-
"""W1_D5_Dailly_Challenge.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uMKrgA6o5XnPdH0jX1JV4hphKgYaYu85

Dailly_Challenge
"""

import math

class Circle:
    def __init__(self, radius=None, diameter=None):
        if radius is not None:
            self._radius = float(radius)
        elif diameter is not None:
            self._radius = float(diameter) / 2
        else:
            raise ValueError("Either radius or diameter must be provided.")

    @property
    def radius(self):
        return self._radius

    @property
    def diameter(self):
        return self._radius * 2

    @radius.setter
    def radius(self, value):
        self._radius = float(value)

    @diameter.setter
    def diameter(self, value):
        self._radius = float(value) / 2

    def area(self):
        return math.pi * (self._radius ** 2)

    def __repr__(self):
        return f"Circle(radius={self._radius:.2f}, diameter={self.diameter:.2f})"

    def __add__(self, other):
        if not isinstance(other, Circle):
            return NotImplemented
        # The new circle's radius is the sum of the radii
        return Circle(radius=self._radius + other.radius)

    def __lt__(self, other):
        if not isinstance(other, Circle):
            return NotImplemented
        return self._radius < other.radius

    def __eq__(self, other):
        if not isinstance(other, Circle):
            return NotImplemented
        return self._radius == other.radius

# Example usage:
if __name__ == "__main__":
    c1 = Circle(radius=10)
    c2 = Circle(diameter=20)

    print(c1)  # Print attributes
    print(c2)

    print("Area of c1:", c1.area())
    print("Area of c2:", c2.area())

    c3 = c1 + c2
    print("Sum of c1 and c2:", c3)

    print("Is c1 bigger than c2?", c1 > c2)  # Will use __lt__ in reverse
    print("Are c1 and c2 equal?", c1 == c2)

    circles = [c2, c1, c3]
    circles.sort()
    print("Sorted circles based on radius:", circles)
